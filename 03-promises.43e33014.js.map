{"mappings":"oeACA,IAAAA,EAAAC,EAAA,SAoBA,SAASC,EAAcC,EAAUC,GAE/B,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3BC,YAAW,KACaC,KAAKC,SAAW,GAEpCJ,EACEN,EAAAW,OAAOC,QAAQ,uBAAqBT,QAAiBC,QAGvDG,EAAOP,EAAAW,OAAOE,QAAQ,sBAAoBV,QAAeC,OAAW,GAErEA,EAAM,G,CA9BEU,SAASC,cAAc,SAE/BC,iBAAiB,UAExB,SAAsBC,GACpBA,EAAIC,iBACJ,MAAMd,MAAEA,EAAKe,KAAEA,EAAIC,OAAEA,GAAWH,EAAII,cAAcC,SAClD,IAAInB,EAAW,EACf,IAAK,IAAIoB,EAAI,EAAGA,EAAIH,EAAOI,MAAOD,GAAK,EAAG,CACxC,IAAIE,EAAUC,OAAOtB,EAAMoB,OAASD,EAAIJ,EAAKK,MAC7CrB,GAAY,EAEZD,EAAcC,EAAUsB,GACrBE,MAAKH,GAASI,QAAQC,IAAIL,KAC1BM,OAAMC,GAASH,QAAQC,IAAIE,I","sources":["src/js/03-promises.js"],"sourcesContent":["\nimport { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst formEl = document.querySelector('.form');\n\nformEl.addEventListener('submit', onFormSubmit);\n\nfunction onFormSubmit(evt) {\n  evt.preventDefault();\n  const { delay, step, amount } = evt.currentTarget.elements;\n  let position = 0;\n  for (let i = 0; i < amount.value; i += 1) {\n    let timeout = Number(delay.value) + i * step.value;\n    position += 1;\n\n    createPromise(position, timeout)\n      .then(value => console.log(value))\n      .catch(error => console.log(error));\n  }\n}\n\nfunction createPromise(position, delay) {\n  \n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      const shouldResolve = Math.random() > 0.3;\n      if (shouldResolve) {\n        resolve(\n          Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`)\n        );\n      } else {\n        reject(Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`));\n      }\n    }, delay);\n  });\n}\n"],"names":["$iQIUW","parcelRequire","$47d4ff9957288465$var$createPromise","position","delay","Promise","resolve","reject","setTimeout","Math","random","Notify","success","failure","document","querySelector","addEventListener","evt","preventDefault","step","amount","currentTarget","elements","i","value","timeout","Number","then","console","log","catch","error"],"version":3,"file":"03-promises.43e33014.js.map"}